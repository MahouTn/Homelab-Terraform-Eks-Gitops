// Filename: Jenkinsfile
// Description: CI/CD pipeline that uses a Kubernetes agent with the
//              Kaniko Service Account (kaniko-sa) to securely build and
//              push a Docker image to ECR using IRSA.
//
// NOTE: This version uses a YAML agent definition and the kaniko:debug image 
// to avoid sidecar startup issues.

pipeline {
    // Define the environment variables outside the YAML agent block
    environment {
        // NOTE: I'm leaving the image URI hardcoded as per your provided pipeline.
        IMAGE_FULL_URI = '802617578034.dkr.ecr.eu-west-1.amazonaws.com/homelab-eks:latest'
    }

    agent {
        kubernetes {
            // Define the Kubernetes Pod using raw YAML
            yaml '''
kind: Pod
metadata:
  name: kaniko-builder
  namespace: ci-cd
spec:
  # IMPORTANT: This links the Pod to your AWS IAM Role (IRSA) for ECR access
  serviceAccountName: kaniko-sa 
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: IfNotPresent
    # FINAL FIX: Use the 'tail -f /dev/null' command via the shell. 
    # This guarantees the container runs indefinitely.
    command:
     - /busybox/sh
     - -c
     - "tail -f /dev/null"
    tty: true
'''
            // Set the container with the image builder utility as the default
            defaultContainer 'kaniko'
        }
    }

    stages {
        stage('Build and Push Image') {
            steps {
                // The main pipeline stage runs inside the 'kaniko' container
                container('kaniko'){
                    // Kaniko command to build and push. 
                    // FIX: Changed --dockerfile to use a path RELATIVE to --context.
                    sh """
                    /kaniko/executor \\
                        --context=\${WORKSPACE}/deploy \\
                        --dockerfile=Dockerfile \\
                        --destination=\${IMAGE_FULL_URI}
                    """
                }
            }
        }
    }
}
