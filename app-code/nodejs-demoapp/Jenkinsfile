pipeline {
    agent {
        kubernetes {
            namespace 'ci-cd'
            serviceAccount 'kaniko-sa'
            containerTemplates([
                containerTemplate(
                    name: 'kaniko',
                    image: 'gcr.io/kaniko-project/executor:latest',
                    tty: true,
                    alwaysPullImage: true
                )
            ])
            label 'kaniko-agent'
        }
    }

    environment {
        AWS_REGION = 'eu-west-1'
        ECR_REPO = 'homelab-eks'
    }

    stages {
        stage('Setup Environment') {
            steps {
                script {
                    // Fetch AWS Account ID in JNLP container
                    def accountId = sh(
                        script: "aws sts get-caller-identity --query Account --output text",
                        returnStdout: true
                    ).trim()
                    env.AWS_ACCOUNT_ID = accountId
                    env.IMAGE_TAG = "${env.BUILD_NUMBER}"
                    env.IMAGE_FULL_URI = "${accountId}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/${env.ECR_REPO}:${env.IMAGE_TAG}"
                    
                    echo "AWS Account ID: ${env.AWS_ACCOUNT_ID}"
                    echo "Image URI: ${env.IMAGE_FULL_URI}"
                }
            }
        }

        stage('Build and Push Image') {
            steps {
                container('kaniko') {
                    sh """
                    /kaniko/executor \
                        --context=\${WORKSPACE}/deploy \
                        --dockerfile=\${WORKSPACE}/deploy/Dockerfile \
                        --destination=${env.IMAGE_FULL_URI} \
                        --skip-tls-verify \
                        --insecure-pull
                    """
                }
            }
        }
    }
}
